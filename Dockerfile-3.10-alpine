FROM python:3.10-alpine AS builder
MAINTAINER Paul Martin
ARG BUILD
RUN sed -i 's#dl-cdn.alpinelinux.org#nexus.salt.gatech.edu/repository/dl-cdn.alpinelinux.org#g' /etc/apk/repositories && apk upgrade --update \
  && apk add --update --no-cache alpine-sdk musl-dev libzmq zeromq-dev libpq-dev openldap-dev gcc libc-dev linux-headers libffi-dev libgit2-dev libssh2-dev rust cargo wget tar
RUN echo 'INPUT ( libldap.so )' > /usr/lib/libldap_r.so
RUN wget -qO- "https://nexus.salt.gatech.edu/repository/github.com/sharkdp/bat/releases/download/v0.22.0/bat-v0.22.0-x86_64-unknown-linux-musl.tar.gz" | tar xvz -C /tmp && find /tmp -name bat -executable -exec mv {} /usr/local/bin \; -quit
ENV PYTHONUNBUFFERED=1 PATH="/usr/local/salt/bin:${PATH}" GENERATE_SALT_SYSPATHS=1 VIRTUAL_ENV=/usr/local/salt
RUN python3 -m venv /usr/local/salt
COPY pip.conf /etc/
COPY prerequisites.txt /
RUN pip install -r /prerequisites.txt
COPY requirements.txt /
RUN pip install -r /requirements.txt
RUN pip install --upgrade pyzmq==23.2.1 || true
RUN pip list && pip list --outdated
COPY nacl.py /usr/local/salt/lib/python3.10/site-packages/salt/utils/
RUN find /usr/local/salt -name \*.pyc -delete

FROM python:3.10-alpine
COPY --from=builder /usr/local/salt /usr/local/salt
COPY --from=builder /usr/local/bin/bat /usr/local/bin/bat
ARG USER_ID=1000
RUN addgroup salt && adduser -u ${USER_ID} -s /bin/sh -h /opt/salt salt -SD -G salt
RUN mkdir -p /srv /var/run/salt /etc/salt/pki/master /etc/salt/pki/minion /etc/salt/master.d /var/log/salt /var/cache/salt/master && chown -R salt:salt /srv /etc/salt /var/log/salt /var/cache/salt /var/run/salt
RUN sed -i 's#dl-cdn.alpinelinux.org#nexus.salt.gatech.edu/repository/dl-cdn.alpinelinux.org#g' /etc/apk/repositories && apk upgrade --update --no-cache \
  && apk add --update --no-cache ca-certificates libzmq libpq libldap libcrypto1.1 libssl1.1 openssl libgcrypt cryptsetup pcre2 binutils openssl-dev libffi gnupg libgit2 libssh2
RUN echo 'INPUT ( libldap.so )' > /usr/lib/libldap_r.so
WORKDIR /opt/salt
ENV PYTHONUNBUFFERED=1 PATH="/usr/local/salt/bin:${PATH}" GENERATE_SALT_SYSPATHS=1 VIRTUAL_ENV=/usr/local/salt
RUN find $VIRTUAL_ENV -type d -name __pycache__ -exec chown -v salt:salt {} \;
USER 1000:1000
ENTRYPOINT ["salt-master"]
CMD ["-l", "info"]

