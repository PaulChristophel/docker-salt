name: Latest Release

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '[0-9]+.[0-9]+-[0-9]+'

jobs:
  build-python3-11:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "BUILD=${GITHUB_REF:10}" | tee -a $GITHUB_ENV
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.11
      continue-on-error: true
      run: |
        podman pull python:3.11-rc-alpine
        podman build -f Dockerfile-3.11-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t docker.io/pcm0/salt:3.11-latest-alpine \
                     -t docker.io/pcm0/salt:3.11-${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/salt:3.11-latest \
                     -t docker.io/pcm0/salt:3.11-${{ env.BUILD }} \
                     -t docker.io/pcm0/salt:3.11-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-latest-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-latest \
                     -t $ACR_URL/pmartin47/salt:3.11-${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/salt:3.11-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}

    - name: Docker System Prune
      run: |
        podman system prune --force --all
  build-python3-11-isalt:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "BUILD=${GITHUB_REF:10}" | tee -a $GITHUB_ENV
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
        echo "ipython" | tee -a requirements-3.11.txt
        echo "isalt" | tee -a requirements-3.11.txt
        echo "asttokens==2.1.0" | tee -a requirements-3.11.txt
        echo "backcall==0.2.0" | tee -a requirements-3.11.txt
        echo "decorator==5.1.1" | tee -a requirements-3.11.txt
        echo "executing==1.2.0" | tee -a requirements-3.11.txt
        echo "jedi==0.18.1" | tee -a requirements-3.11.txt
        echo "matplotlib-inline==0.1.6" | tee -a requirements-3.11.txt
        echo "parso==0.8.3" | tee -a requirements-3.11.txt
        echo "pexpect==4.8.0" | tee -a requirements-3.11.txt
        echo "pickleshare==0.7.5" | tee -a requirements-3.11.txt
        echo "prompt-toolkit==3.0.32" | tee -a requirements-3.11.txt
        echo "ptyprocess==0.7.0" | tee -a requirements-3.11.txt
        echo "pure-eval==0.2.2" | tee -a requirements-3.11.txt
        echo "pygments==2.13.0" | tee -a requirements-3.11.txt
        echo "six==1.16.0" | tee -a requirements-3.11.txt
        echo "stack-data==0.6.1" | tee -a requirements-3.11.txt
        echo "traitlets==5.5.0" | tee -a requirements-3.11.txt
        echo "wcwidth==0.2.5" | tee -a requirements-3.11.txt
    - name: Python 3.11
      continue-on-error: true
      run: |
        podman pull python:3.11-rc-alpine
        podman build -f Dockerfile-3.11-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t docker.io/pcm0/salt:3.11-isalt-latest-alpine \
                     -t docker.io/pcm0/salt:3.11-isalt-${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/salt:3.11-isalt-latest \
                     -t docker.io/pcm0/salt:3.11-isalt-${{ env.BUILD }} \
                     -t docker.io/pcm0/salt:3.11-isalt-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-isalt-latest-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-isalt-${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-isalt-latest \
                     -t $ACR_URL/pmartin47/salt:3.11-isalt-${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/salt:3.11-isalt-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.SHORT_BUILDSHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}

    - name: Docker System Prune
      run: |
        podman system prune --force --all
  build-python3-10:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "BUILD=${GITHUB_REF:10}" | tee -a $GITHUB_ENV
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.10
      run: |
        BUILD=${GITHUB_REF:10}
        echo "BUILD: ${BUILD}"
        podman pull python:3.10-alpine
        podman build -f Dockerfile-3.10-alpine --build-arg BUILD=${{ env.BUILD }} . \
                     -t docker.io/pcm0/salt:3.10-latest-alpine \
                     -t docker.io/pcm0/salt:3.10-${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/salt:latest-alpine \
                     -t docker.io/pcm0/salt:${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/salt:3.10-latest \
                     -t docker.io/pcm0/salt:3.10-${{ env.BUILD }} \
                     -t docker.io/pcm0/salt:latest \
                     -t docker.io/pcm0/salt:${{ env.BUILD }} \
                     -t docker.io/pcm0/salt:3.10-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.10-latest-alpine \
                     -t $ACR_URL/pmartin47/salt:3.10-${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/salt:latest-alpine \
                     -t $ACR_URL/pmartin47/salt:${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.10-latest \
                     -t $ACR_URL/pmartin47/salt:3.10-${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/salt:latest \
                     -t $ACR_URL/pmartin47/salt:${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/salt:3.10-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/docker.io\/pcm0\/salt/&&/latest/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/latest/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
    - name: Docker System Prune
      run: |
        podman system prune --force --all
    - name: Create a Release
      uses: ncipollo/release-action@v1
      with:
        #artifacts: "release.tar.gz,foo/*.txt"
        #bodyFile: "body.md"
        token: ${{ secrets.RELEASE_TOKEN }}
        name:  ${{ github.ref_name }} 
        body: |+
          CHANGELOG:
          ${{ github.event.head_commit.message }}

          To download this release:
          podman pull docker.io/pcm0/salt

          Or to specify a build:
          podman pull docker.io/pcm0/salt:3.11-${{ env.BUILD }}-alpine
          podman pull docker.io/pcm0/salt:3.10-${{ env.BUILD }}-alpine
  build-python3-10-isalt:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "BUILD=${GITHUB_REF:10}" | tee -a $GITHUB_ENV
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
        echo "ipython" | tee -a requirements.txt
        echo "isalt" | tee -a requirements.txt
    - name: Python 3.10
      run: |
        BUILD=${GITHUB_REF:10}
        echo "BUILD: ${BUILD}"
        podman pull python:3.10-alpine
        podman build -f Dockerfile-3.10-alpine --build-arg BUILD=${{ env.BUILD }} . \
                     -t docker.io/pcm0/salt:3.10-isalt-latest-alpine \
                     -t docker.io/pcm0/salt:3.10-isalt-${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/salt:isalt-latest-alpine \
                     -t docker.io/pcm0/salt:isalt-${{ env.BUILD }}-alpine \
                     -t docker.io/pcm0/salt:3.10-isalt-latest \
                     -t docker.io/pcm0/salt:3.10-isalt-${{ env.BUILD }} \
                     -t docker.io/pcm0/salt:isalt-latest \
                     -t docker.io/pcm0/salt:isalt-${{ env.BUILD }} \
                     -t docker.io/pcm0/salt:3.10-isalt-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.10-isalt-latest-alpine \
                     -t $ACR_URL/pmartin47/salt:3.10-isalt-${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/salt:isalt-latest-alpine \
                     -t $ACR_URL/pmartin47/salt:isalt-${{ env.BUILD }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.10-isalt-latest \
                     -t $ACR_URL/pmartin47/salt:3.10-isalt-${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/salt:isalt-latest \
                     -t $ACR_URL/pmartin47/salt:isalt-${{ env.BUILD }} \
                     -t $ACR_URL/pmartin47/salt:3.10-isalt-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/docker.io\/pcm0\/salt/&&/latest/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.BUILD }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/latest/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
    - name: Docker System Prune
      run: |
        podman system prune --force --all
