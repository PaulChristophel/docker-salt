name: Unstable Release

on:
  push:
    # Pattern matched against refs/tags
    branches:
      - master
    tags:
      - '![0-9]+.[0-9]+-[0-9]+a[0-9]+'
      - '![0-9]+.[0-9]+-[0-9]+b[0-9]+'
      - '![0-9]+.[0-9]+-[0-9]+'

jobs:
  build-python3-11:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.11
      continue-on-error: true
      run: |
        docker pull python:3.11-alpine
        docker build -f Dockerfile-3.11-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t pcm0/salt:3.11-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker images | awk "/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} docker push {}
    - name: Docker System Prune
      run: |
        docker system prune --force --all
  build-python3-11-isalt:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
        echo "ipython" | tee -a requirements-3.11.txt
        echo "isalt" | tee -a requirements-3.11.txt
    - name: Python 3.11
      continue-on-error: true
      run: |
        docker pull python:3.11-alpine
        docker build -f Dockerfile-3.11-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t pcm0/salt:3.11-isalt-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker images | awk "/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} docker push {}
    - name: Docker System Prune
      run: |
        docker system prune --force --all
  build-python3-10:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
        echo "ipython" | tee -a requirements.txt
        echo "isalt" | tee -a requirements.txt
    - name: Python 3.10
      run: |
        docker pull python:3.10-alpine
        docker build -f Dockerfile-3.10-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t pcm0/salt:3.10-isalt-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker images | awk "/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} docker push {}
    - name: Docker System Prune
      run: |
        docker system prune --force --all
  build-python3-10-isalt:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.10
      run: |
        docker pull python:3.10-alpine
        docker build -f Dockerfile-3.10-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t pcm0/salt:3.10-isalt-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        docker images | awk "/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} docker push {}
    - name: Docker System Prune
      run: |
        docker system prune --force --all
      