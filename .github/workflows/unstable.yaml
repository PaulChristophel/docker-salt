name: Unstable Release

on:
  push:
    # Pattern matched against refs/tags
    branches:
      - master
    tags:
      - '![0-9]+.[0-9]+-[0-9]+a[0-9]+'
      - '![0-9]+.[0-9]+-[0-9]+b[0-9]+'
      - '![0-9]+.[0-9]+-[0-9]+'

jobs:

  build-python3-11-dev:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.11 Dev
      continue-on-error: true
      run: |
        podman pull python:3.11-alpine
        podman build -f Dockerfile-3.11-dev-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t docker.io/pcm0/salt:3.11-dev-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-dev-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-dev-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/docker.io\/pcm0\/salt/&&/dev/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/dev/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
    - name: Docker System Prune
      run: |
        podman system prune --force --all

  build-python3-11-dev-isalt:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.11
      continue-on-error: true
      run: |
        podman pull python:3.11-alpine
        podman build -f Dockerfile-3.11-dev-isalt-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t docker.io/pcm0/salt:3.11-dev-isalt-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-dev-isalt-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-dev-isalt-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/docker.io\/pcm0\/salt/&&/dev/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/dev/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
    - name: Docker System Prune
      run: |
        podman system prune --force --all

  build-python3-11-3006:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.11
      continue-on-error: true
      run: |
        podman pull python:3.11-alpine
        podman build -f Dockerfile-3.11-3006-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t docker.io/pcm0/salt:3.11-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
    - name: Docker System Prune
      run: |
        podman system prune --force --all

  build-python3-11-3006-isalt:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: pcm0
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ACR_URL: ${{ secrets.ACR_URL }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Build Version
      run: |
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" | tee -a $GITHUB_ENV
    - name: Python 3.11
      continue-on-error: true
      run: |
        podman pull python:3.11-alpine
        podman build -f Dockerfile-3.11-3006-isalt-alpine --build-arg BUILD=${{ env.SHORT_SHA }} . \
                     -t docker.io/pcm0/salt:3.11-isalt-${{ env.SHORT_SHA }}-alpine \
                     -t $ACR_URL/pmartin47/salt:3.11-isalt-${{ env.SHORT_SHA }}-alpine
    - name: Push to Docker Hub
      run: |
        podman login docker.io --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        podman images | awk "/docker.io\/pcm0\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
        podman logout
        podman login $ACR_URL --username $ACR_USERNAME --password $ACR_PASSWORD
        podman images | awk "/$ACR_URL\/pmartin47\/salt/&&/${{ env.SHORT_SHA }}/ { print \$1\":\"\$2 }" | xargs -I {} podman push {}
    - name: Docker System Prune
      run: |
        podman system prune --force --all